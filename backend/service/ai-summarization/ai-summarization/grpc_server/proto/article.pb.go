// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.32.0--rc2
// source: article.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetArticleRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleId     string                 `protobuf:"bytes,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArticleRequest) Reset() {
	*x = GetArticleRequest{}
	mi := &file_article_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticleRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleRequest) ProtoMessage() {}

func (x *GetArticleRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleRequest.ProtoReflect.Descriptor instead.
func (*GetArticleRequest) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{0}
}

func (x *GetArticleRequest) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

type GetArticleResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Article       *Article               `protobuf:"bytes,1,opt,name=article,proto3" json:"article,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArticleResponse) Reset() {
	*x = GetArticleResponse{}
	mi := &file_article_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticleResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleResponse) ProtoMessage() {}

func (x *GetArticleResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleResponse.ProtoReflect.Descriptor instead.
func (*GetArticleResponse) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{1}
}

func (x *GetArticleResponse) GetArticle() *Article {
	if x != nil {
		return x.Article
	}
	return nil
}

type Article struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleId     string                 `protobuf:"bytes,1,opt,name=article_id,json=articleId,proto3" json:"article_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Link          string                 `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	Keywords      []string               `protobuf:"bytes,4,rep,name=keywords,proto3" json:"keywords,omitempty"`
	Creator       []string               `protobuf:"bytes,5,rep,name=creator,proto3" json:"creator,omitempty"`
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`
	PubDate       string                 `protobuf:"bytes,7,opt,name=pub_date,json=pubDate,proto3" json:"pub_date,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Article) Reset() {
	*x = Article{}
	mi := &file_article_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Article) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Article) ProtoMessage() {}

func (x *Article) ProtoReflect() protoreflect.Message {
	mi := &file_article_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Article.ProtoReflect.Descriptor instead.
func (*Article) Descriptor() ([]byte, []int) {
	return file_article_proto_rawDescGZIP(), []int{2}
}

func (x *Article) GetArticleId() string {
	if x != nil {
		return x.ArticleId
	}
	return ""
}

func (x *Article) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Article) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Article) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *Article) GetCreator() []string {
	if x != nil {
		return x.Creator
	}
	return nil
}

func (x *Article) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Article) GetPubDate() string {
	if x != nil {
		return x.PubDate
	}
	return ""
}

var File_article_proto protoreflect.FileDescriptor

const file_article_proto_rawDesc = "" +
	"\n" +
	"\rarticle.proto\x12\x05proto\"2\n" +
	"\x11GetArticleRequest\x12\x1d\n" +
	"\n" +
	"article_id\x18\x01 \x01(\tR\tarticleId\">\n" +
	"\x12GetArticleResponse\x12(\n" +
	"\aarticle\x18\x01 \x01(\v2\x0e.proto.ArticleR\aarticle\"\xbd\x01\n" +
	"\aArticle\x12\x1d\n" +
	"\n" +
	"article_id\x18\x01 \x01(\tR\tarticleId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x12\n" +
	"\x04link\x18\x03 \x01(\tR\x04link\x12\x1a\n" +
	"\bkeywords\x18\x04 \x03(\tR\bkeywords\x12\x18\n" +
	"\acreator\x18\x05 \x03(\tR\acreator\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\x12\x19\n" +
	"\bpub_date\x18\a \x01(\tR\apubDate2S\n" +
	"\x0eArticleService\x12A\n" +
	"\n" +
	"GetArticle\x12\x18.proto.GetArticleRequest\x1a\x19.proto.GetArticleResponseB\x03Z\x01/b\x06proto3"

var (
	file_article_proto_rawDescOnce sync.Once
	file_article_proto_rawDescData []byte
)

func file_article_proto_rawDescGZIP() []byte {
	file_article_proto_rawDescOnce.Do(func() {
		file_article_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_article_proto_rawDesc), len(file_article_proto_rawDesc)))
	})
	return file_article_proto_rawDescData
}

var file_article_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_article_proto_goTypes = []any{
	(*GetArticleRequest)(nil),  // 0: proto.GetArticleRequest
	(*GetArticleResponse)(nil), // 1: proto.GetArticleResponse
	(*Article)(nil),            // 2: proto.Article
}
var file_article_proto_depIdxs = []int32{
	2, // 0: proto.GetArticleResponse.article:type_name -> proto.Article
	0, // 1: proto.ArticleService.GetArticle:input_type -> proto.GetArticleRequest
	1, // 2: proto.ArticleService.GetArticle:output_type -> proto.GetArticleResponse
	2, // [2:3] is the sub-list for method output_type
	1, // [1:2] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_article_proto_init() }
func file_article_proto_init() {
	if File_article_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_article_proto_rawDesc), len(file_article_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_article_proto_goTypes,
		DependencyIndexes: file_article_proto_depIdxs,
		MessageInfos:      file_article_proto_msgTypes,
	}.Build()
	File_article_proto = out.File
	file_article_proto_goTypes = nil
	file_article_proto_depIdxs = nil
}
